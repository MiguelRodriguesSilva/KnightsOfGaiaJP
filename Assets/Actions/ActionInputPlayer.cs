//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Actions/ActionInputPlayer.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ActionInputPlayer: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ActionInputPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ActionInputPlayer"",
    ""maps"": [
        {
            ""name"": ""PlayerMove"",
            ""id"": ""dbdb7df3-ea73-4e89-a006-db72cd38c042"",
            ""actions"": [
                {
                    ""name"": ""Movimentacao"",
                    ""type"": ""Value"",
                    ""id"": ""6268f73c-5190-43d0-a70e-41a44035f819"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tiro"",
                    ""type"": ""Button"",
                    ""id"": ""f27fdc70-295f-4042-bd18-ba98b7c11c46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""3284730d-cc8d-4a3e-a6ce-54a15d2d0cbf"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""67a059e4-7013-4e09-9ae0-192aba3f532f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ef216a79-f873-4ea9-8d08-367dcd21c9db"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0621d47e-6b4d-48c5-8e10-914c97bec526"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cbb30da1-da0d-49be-aef8-be29866d9397"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Setas"",
                    ""id"": ""61411335-9643-4982-bba6-c5e57fa52ffc"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0340636d-acd3-411f-939f-3ea4103268ac"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""06c1864c-0e2e-49b0-adca-1527c933f84a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2f59fa0-cef3-48f1-828e-e59ed2121a22"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2275b4f7-8a2d-4d07-94a5-240bcac7c68c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9b389d87-3ae3-4c6e-b8af-46a87d213f92"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tiro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""587760bd-38a6-40a0-b179-e2c03e123dce"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tiro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143e14ff-42f1-4681-8d0c-0539d58d1acc"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tiro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""GamepadStick"",
                    ""id"": ""1dceeb9e-c31c-4a40-b452-64c665a5be0a"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""beab741d-457a-4717-8ff6-d610324ed307"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""053dceae-f9f9-4e03-a60a-755e7c6946bb"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c5091ba7-13fe-484e-9277-3102f696860e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""03f1b3a6-05e1-4d85-96d9-1d8411b5131e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""TrocarElement"",
            ""id"": ""23f32f36-f62e-48c7-863e-2315b900b335"",
            ""actions"": [
                {
                    ""name"": ""Fogo"",
                    ""type"": ""Button"",
                    ""id"": ""a1d56233-7b07-42f7-ae8a-33ae8ffcc0fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pedra"",
                    ""type"": ""Button"",
                    ""id"": ""7e6bc33b-1668-49ab-a1d7-ad0fb233902d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Agua"",
                    ""type"": ""Button"",
                    ""id"": ""b8fb4291-9f90-4e70-b423-beeb54c96a40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Folha"",
                    ""type"": ""Button"",
                    ""id"": ""98641266-fde1-4e6a-9b59-6ee136618926"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6f2be30a-7767-4e93-b5df-c49a1362e60f"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fogo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b77bda76-8f4c-4064-a817-2a734ff5d8d1"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pedra"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a0ea5ed-cb62-4fa7-81af-fa9136d51a81"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agua"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d022e1c1-d186-46f3-beda-d5ba8dd4d8fc"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Folha"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMove
        m_PlayerMove = asset.FindActionMap("PlayerMove", throwIfNotFound: true);
        m_PlayerMove_Movimentacao = m_PlayerMove.FindAction("Movimentacao", throwIfNotFound: true);
        m_PlayerMove_Tiro = m_PlayerMove.FindAction("Tiro", throwIfNotFound: true);
        // TrocarElement
        m_TrocarElement = asset.FindActionMap("TrocarElement", throwIfNotFound: true);
        m_TrocarElement_Fogo = m_TrocarElement.FindAction("Fogo", throwIfNotFound: true);
        m_TrocarElement_Pedra = m_TrocarElement.FindAction("Pedra", throwIfNotFound: true);
        m_TrocarElement_Agua = m_TrocarElement.FindAction("Agua", throwIfNotFound: true);
        m_TrocarElement_Folha = m_TrocarElement.FindAction("Folha", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMove
    private readonly InputActionMap m_PlayerMove;
    private List<IPlayerMoveActions> m_PlayerMoveActionsCallbackInterfaces = new List<IPlayerMoveActions>();
    private readonly InputAction m_PlayerMove_Movimentacao;
    private readonly InputAction m_PlayerMove_Tiro;
    public struct PlayerMoveActions
    {
        private @ActionInputPlayer m_Wrapper;
        public PlayerMoveActions(@ActionInputPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimentacao => m_Wrapper.m_PlayerMove_Movimentacao;
        public InputAction @Tiro => m_Wrapper.m_PlayerMove_Tiro;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMoveActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMoveActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Add(instance);
            @Movimentacao.started += instance.OnMovimentacao;
            @Movimentacao.performed += instance.OnMovimentacao;
            @Movimentacao.canceled += instance.OnMovimentacao;
            @Tiro.started += instance.OnTiro;
            @Tiro.performed += instance.OnTiro;
            @Tiro.canceled += instance.OnTiro;
        }

        private void UnregisterCallbacks(IPlayerMoveActions instance)
        {
            @Movimentacao.started -= instance.OnMovimentacao;
            @Movimentacao.performed -= instance.OnMovimentacao;
            @Movimentacao.canceled -= instance.OnMovimentacao;
            @Tiro.started -= instance.OnTiro;
            @Tiro.performed -= instance.OnTiro;
            @Tiro.canceled -= instance.OnTiro;
        }

        public void RemoveCallbacks(IPlayerMoveActions instance)
        {
            if (m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMoveActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMoveActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMoveActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMoveActions @PlayerMove => new PlayerMoveActions(this);

    // TrocarElement
    private readonly InputActionMap m_TrocarElement;
    private List<ITrocarElementActions> m_TrocarElementActionsCallbackInterfaces = new List<ITrocarElementActions>();
    private readonly InputAction m_TrocarElement_Fogo;
    private readonly InputAction m_TrocarElement_Pedra;
    private readonly InputAction m_TrocarElement_Agua;
    private readonly InputAction m_TrocarElement_Folha;
    public struct TrocarElementActions
    {
        private @ActionInputPlayer m_Wrapper;
        public TrocarElementActions(@ActionInputPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fogo => m_Wrapper.m_TrocarElement_Fogo;
        public InputAction @Pedra => m_Wrapper.m_TrocarElement_Pedra;
        public InputAction @Agua => m_Wrapper.m_TrocarElement_Agua;
        public InputAction @Folha => m_Wrapper.m_TrocarElement_Folha;
        public InputActionMap Get() { return m_Wrapper.m_TrocarElement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TrocarElementActions set) { return set.Get(); }
        public void AddCallbacks(ITrocarElementActions instance)
        {
            if (instance == null || m_Wrapper.m_TrocarElementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TrocarElementActionsCallbackInterfaces.Add(instance);
            @Fogo.started += instance.OnFogo;
            @Fogo.performed += instance.OnFogo;
            @Fogo.canceled += instance.OnFogo;
            @Pedra.started += instance.OnPedra;
            @Pedra.performed += instance.OnPedra;
            @Pedra.canceled += instance.OnPedra;
            @Agua.started += instance.OnAgua;
            @Agua.performed += instance.OnAgua;
            @Agua.canceled += instance.OnAgua;
            @Folha.started += instance.OnFolha;
            @Folha.performed += instance.OnFolha;
            @Folha.canceled += instance.OnFolha;
        }

        private void UnregisterCallbacks(ITrocarElementActions instance)
        {
            @Fogo.started -= instance.OnFogo;
            @Fogo.performed -= instance.OnFogo;
            @Fogo.canceled -= instance.OnFogo;
            @Pedra.started -= instance.OnPedra;
            @Pedra.performed -= instance.OnPedra;
            @Pedra.canceled -= instance.OnPedra;
            @Agua.started -= instance.OnAgua;
            @Agua.performed -= instance.OnAgua;
            @Agua.canceled -= instance.OnAgua;
            @Folha.started -= instance.OnFolha;
            @Folha.performed -= instance.OnFolha;
            @Folha.canceled -= instance.OnFolha;
        }

        public void RemoveCallbacks(ITrocarElementActions instance)
        {
            if (m_Wrapper.m_TrocarElementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITrocarElementActions instance)
        {
            foreach (var item in m_Wrapper.m_TrocarElementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TrocarElementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TrocarElementActions @TrocarElement => new TrocarElementActions(this);
    public interface IPlayerMoveActions
    {
        void OnMovimentacao(InputAction.CallbackContext context);
        void OnTiro(InputAction.CallbackContext context);
    }
    public interface ITrocarElementActions
    {
        void OnFogo(InputAction.CallbackContext context);
        void OnPedra(InputAction.CallbackContext context);
        void OnAgua(InputAction.CallbackContext context);
        void OnFolha(InputAction.CallbackContext context);
    }
}
